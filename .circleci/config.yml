version: 2.1

orbs:
  python: circleci/python@0.2.1

jobs:

  test:
    executor: python/default
    steps:
      - checkout

      - run:
          name: ‚è¨ Downloading test repositories
          command: |
            git clone https://github.com/YEmreAk/YLib ../YLib
            git clone https://github.com/YEmreAk/YPython ../YPython
            git clone https://github.com/yedhrab/DarkCode-Theme ../DarkCode-Theme

      - run:
          name: ‚öóÔ∏è Functional testing
          command: |
            python setup.py test
     
      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results


# Continuously Deploying Python Packages to PyPI with CircleCI
# https://circleci.com/blog/continuously-deploying-python-packages-to-pypi-with-circleci/

# The built-in environment variable CIRCLE_TAG is not present
# git push origin <tag-name>
# https://support.circleci.com/hc/en-us/articles/360020342494-The-built-in-environment-variable-CIRCLE-TAG-is-not-present

  deploy:
    executor: python/default
    steps:
      - checkout

      - run:
          name: üè∑Ô∏è Verify git tag version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify

      - run:
          name: üî® PYPI configuration created
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_TOKEN" >> ~/.pypirc

      - run:
          name: ‚è¨ Install dependencies
          command: |
            pip install --upgrade setuptools wheel tqdm twine
      
      - run:
          name: üì¶ Create PYPI package
          command: |
            python setup.py sdist bdist_wheel

      - run:
          name: ‚è´ Upload package to PYPI
          command: |
            twine upload dist/*

workflows:
  test:
    jobs:
      - test
  test-and-deploy:
    jobs:
      - deploy:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
